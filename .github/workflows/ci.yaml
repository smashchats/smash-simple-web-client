name: CI/CD Pipeline

on:
    push:
        branches: ['main'] # Trigger on push to the main branch
    pull_request:
        branches: ['main'] # Trigger on pull requests to the main branch

jobs:
    install:
        runs-on: ubuntu-24.04
        outputs:
            cache-key: ${{ steps.set-cache-key.outputs.cache-key }}
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'

            - name: Set Cache Key Output
              id: set-cache-key
              run: echo "cache-key=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

            - name: Check Cache
              id: cache-check
              uses: actions/cache/restore@v4
              with:
                  path: |
                      node_modules
                      ~/.npm
                  key: ${{ steps.set-cache-key.outputs.cache-key }}

            - name: Clone smash-node-lib dependency
              run: git clone --depth 1 https://github.com/smashchats/smash-node-lib.git

            - name: Install Lib Dependencies
              if: steps.cache-check.outputs.cache-hit != 'true'
              run: cd smash-node-lib && npm ci && cd ..

            - name: Install Dependencies
              if: steps.cache-check.outputs.cache-hit != 'true'
              run: npm ci

            - name: Cache Dependencies
              if: steps.cache-check.outputs.cache-hit != 'true'
              uses: actions/cache/save@v4
              with:
                  path: |
                      node_modules
                      ~/.npm
                  key: ${{ steps.set-cache-key.outputs.cache-key }}

    tests:
        needs: install
        runs-on: ubuntu-24.04
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'

            - name: Restore Cache
              uses: actions/cache/restore@v4
              with:
                  path: |
                      node_modules
                      ~/.npm
                  key: ${{ needs.install.outputs.cache-key }}

            - name: Run Tests
              run: npm run test

    build:
        needs: [install, tests]
        runs-on: ubuntu-24.04
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  persist-credentials: false

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '22.x'

            - name: Restore Cache
              uses: actions/cache/restore@v4
              with:
                  path: |
                      node_modules
                      ~/.npm
                  key: ${{ needs.install.outputs.cache-key }}

            - name: Build
              run: npm run build

            - name: Upload dist artifact
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist/
                  retention-days: 1

    deploy:
        needs: build
        runs-on: ubuntu-24.04
        if: github.ref == 'refs/heads/main'
        concurrency: ci-${{ github.ref }}

        permissions:
            contents: write
            pages: write
            id-token: write

        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Pages
              uses: actions/configure-pages@v4

            - name: Download dist artifact
              uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: dist

            - name: Create CNAME file
              run: echo "web.smashchats.com" > dist/CNAME

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: './dist'

            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
